@model ProductEmailAFriendModel
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(Model.ProductName);
    Html.AddTitleParts(T("PageTitle.ProductEmailAFriend").Text);
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<section id="section-mission" class="section section-full-width teal-bg">
    <div class="home-mission content-inner-width">
        <h1 class="mission-header">
            <p class="category-header">Share Product @Model.ProductName</p>
            <p style="padding-bottom: 20px;">@Model.ProductDescription</p>
        </h1>
    </div>
</section>
@if (Model.SuccessfullySent)
{
    <div class='alert alert-success'>
        Thank you for sharing the product.
    </div>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        var validationSummary = Html.ValidationSummary(true);
        if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
        {
            <div class="message-error">@validationSummary</div>
        }
        <section id="section-product-categories" class="section section-full-width">
            <div class="product-category-wrapper product-category-products content-inner-width">
                <div class="contact-form-wrapper">
                    <form>
                        <div class="form-group">
                            <label for="FriendEmail" class="control-label">Email</label>*
                            @Html.TextBoxFor(model => model.FriendEmail, new { @class = "form-control", placeholder = "To Email" })
                            @Html.ValidationMessageFor(model => model.FriendEmail)
                            <input type="hidden" name="IsEmailForm" value="true" />
                        </div>
                        <div class="form-group">
                            <label for="YourEmailAddress" class="control-label">Email</label>*
                            @Html.TextBoxFor(model => model.YourEmailAddress, new { @class = "form-control", placeholder = "From Email" })
                            @Html.ValidationMessageFor(model => model.YourEmailAddress)
                        </div>


                        <div class="form-group">
                            <label for="PersonalMessage" class="control-label">Message</label>
                            @Html.TextAreaFor(model => model.PersonalMessage, new { @class = "form-control", cols = "40", rows = "5", placeholder = T("Products.EmailAFriend.PersonalMessage.Hint") })
                            @Html.ValidationMessageFor(model => model.PersonalMessage)


                        </div>
                        <div class="form-group">
                            <input type="submit" name="send-email" class="btn btn-primary" value="@T("Products.EmailAFriend.Button")" />

                        </div>
                    </form>
                </div><!-- /contact-from-wrapper -->
            </div>
        </section>
    }
}


@Html.Action("TopicBlock", "Topic", new { systemName = "MostSearchOptions" })

@Html.Action("TopicBlock", "Topic", new { systemName = "DezinecorpDifference" })

@Html.Action("SubscriptionEmail", "Common")




@*<div class="page email-a-friend-page">
        <div class="page-title">
            <h1>@T("Products.EmailAFriend.Title")</h1>
        </div>
        <div class="page-body">
            <div class="title">
                <h2><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" class="product">@Model.ProductName</a></h2>
            </div>
            @if (Model.SuccessfullySent)
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            else
            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    var validationSummary = Html.ValidationSummary(true);
                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="message-error">@validationSummary</div>
                    }
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="inputs">
                                @Html.LabelFor(model => model.FriendEmail)
                                @Html.TextBoxFor(model => model.FriendEmail, new { @class = "friend-email", placeholder = T("Products.EmailAFriend.FriendEmail.Hint") })
                                @Html.RequiredHint()
                                @Html.ValidationMessageFor(model => model.FriendEmail)
                            </div>
                            <div class="inputs">
                                @Html.LabelFor(model => model.YourEmailAddress)
                                @Html.TextBoxFor(model => model.YourEmailAddress, new { @class = "your-email", placeholder = T("Products.EmailAFriend.YourEmailAddress.Hint") })
                                @Html.RequiredHint()
                                @Html.ValidationMessageFor(model => model.YourEmailAddress)
                            </div>
                            <div class="inputs">
                                @Html.LabelFor(model => model.PersonalMessage)
                                @Html.TextAreaFor(model => model.PersonalMessage, new { @class = "personal-message", placeholder = T("Products.EmailAFriend.PersonalMessage.Hint") })
                                @Html.ValidationMessageFor(model => model.PersonalMessage)
                            </div>
                            @if (Model.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    @Html.Raw(Html.GenerateCaptcha())
                                </div>
                            }
                        </div>
                    </div>
                    <div class="buttons">
                        <input type="submit" name="send-email" class="button-1 send-email-a-friend-button" value="@T("Products.EmailAFriend.Button")" />
                    </div>
                }
            }
        </div>
    </div>*@
