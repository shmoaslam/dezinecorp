@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(storeName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }
}


<style>


    .cross {
        position: relative;
        display: inline-block;
    }

        .cross::before, .cross::after {
            content: '';
            width: 100%;
            position: absolute;
            right: 0;
            top: 50%;
        }

        .cross::before {
            border-bottom: 2px solid red;
            -webkit-transform: skewY(-20deg);
            transform: skewY(-20deg);
        }
</style>

<div class="container">
    @Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)
    @Html.Widget("productdetails_after_breadcrumb", Model.Id)
    <div class="card-product">
        <div class="wrapper row">
            <div class="preview col-md-4">
                @Html.Partial("_ProductDetailsPictures", Model)

                @if (Model.DFamilyProducts != null)
                {

                    <div class="row">
                        <div class="main-header" style="margin-top: 40px;">
                            <p>Related Product</p>
                        </div>
                    </div>
                    if (Model.DFamilyProducts.Count > 1)
                    {
                        var items = Model.DFamilyProducts.Take(4);
                        var iterations = 0;
                        while (items.Count() > 0)
                        {
                            var active = iterations == 0 ? "active" : "";

                            <div class="row" style="margin-bottom:5px">
                                @foreach (var item in items)
                                {
                                    <div class="col-md-3 col-xs-3 border-r">

                                        <div style="height:70px;">
                                            <a href="@Url.RouteUrl("Product", new { SeName = item.SEName })" title="@item.Name">
                                                <div style="width:100%;height:100%;background:url(@item.DefaultPicture.ImageUrl) center center no-repeat;"></div>
                                            </a>
                                        </div>


                                    </div>

                                }
                            </div>

                            iterations++;
                            items = Model.DFamilyProducts.Skip(4 * iterations).Take(4);
                        }
                    }

                }


            </div>
            <div class="details col-md-8">
                <h3 class="product-title">@Model.Name</h3>
                <hr style="width: 100%;margin-top: 0px;margin-bottom: 10px;border: 1px solid #ccc;">
                <h5 style="font-size:16px;"><strong>@Model.Sku</strong></h5>
                <p>@Model.ShortDescription</p>
                <br />

                @if (Model.DBrandingProducts != null)
                {
                    if (Model.DBrandingProducts.Any())
                    {

                        <div class="row">
                            <ul class="product-li">
                                @foreach (var item in Model.DBrandingProducts)
                                {
                                    <li>
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.SEName })" title="@item.Name">
                                            <img class="dp-img" src="@item.DefaultPicture.ImageUrl" alt="@item.Name" title="@item.Name" />
                                            <p><small>@item.BrandingType</small></p>
                                        </a>
                                    </li>


                                }
                            </ul>
                        </div>
                    }
                }
                <br />
                <div class="card">
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a style="color:#777777;" href="#price" aria-controls="messages" role="tab" data-toggle="tab">Pricing</a></li>
                        <li role="presentation"><a style="color:#777777;" href="#features" aria-controls="home" role="tab" data-toggle="tab">Features</a></li>
                        <li role="presentation"><a style="color:#777777;" href="#spec" aria-controls="profile" role="tab" data-toggle="tab">Specifications</a></li>
                    </ul>
                    <!-- Tab panes -->
                   
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="price">
                            <table class="table table-responsive">
                                <tbody>
                                    @if (Model.DTierPrices != null)
                                    {
                                        var priceLevel = 0;
                                        foreach (var tierprice in Model.DTierPrices)
                                        {
                                            if (tierprice.PriceName.Equals("Quantity"))
                                            {
                                                <tr style="color: black;background-color: #dcdcdc;font-weight:bold;">

                                                    <th scope="col">@tierprice.PriceName</th>
                                                    @if (!string.IsNullOrEmpty(tierprice.Price1))
                                                    {
                                                        <th scope="col">@tierprice.Price1</th>
                                                        priceLevel++;
                                                    }
                                                    @if (!string.IsNullOrEmpty(tierprice.Price2))
                                                    {
                                                        <th scope="col">@tierprice.Price2</th>
                                                        priceLevel++;
                                                    }
                                                    @if (!string.IsNullOrEmpty(tierprice.Price3))
                                                    {
                                                        <th scope="col">@tierprice.Price3</th>
                                                        priceLevel++;
                                                    }
                                                    @if (!string.IsNullOrEmpty(tierprice.Price4))
                                                    {
                                                        <th scope="col">@tierprice.Price4</th>
                                                        priceLevel++;
                                                    }
                                                    <th scope="col">@tierprice.DiscountCode</th>
                                                </tr>
                                            }
                                            else
                                            {

                                                var isPriceRow = tierprice.PriceName.Equals("Price", StringComparison.OrdinalIgnoreCase) || tierprice.PriceName.Equals("Sale Price", StringComparison.OrdinalIgnoreCase);

                                                <tr style="color:Black;background-color:white;@(isPriceRow || tierprice.IsManufacturePrice ? "border-bottom: 2px solid #007A8A;" : string.Empty)">

                                                    <td  @(tierprice.PriceName.Equals("Sale Price", StringComparison.OrdinalIgnoreCase) ? "style=color:red;" : "")>@tierprice.PriceName</td>
                                                    @if (priceLevel == 1)
                                                    {
                                                        <td>
                                                            <span class="@(tierprice.IsPrice1StrikeOut ? "cross" : "")">@tierprice.Price1.Replace(" ", "")</span>
                                                        </td>
                                                    }
                                                    else if (priceLevel == 2)
                                                    {
                                                        <td>
                                                            <span class="@(tierprice.IsPrice1StrikeOut ? "cross" : "")">@tierprice.Price1.Replace(" ", "")</span>
                                                        </td>
                                                        <td>
                                                            <span class="@(tierprice.IsPrice2StrikeOut ? "cross" : "")">@tierprice.Price2.Replace(" ", "")</span>
                                                        </td>
                                                    }
                                                    else if (priceLevel == 3)
                                                    {
                                                        <td>
                                                            <span class="@(tierprice.IsPrice1StrikeOut ? "cross" : "")">@tierprice.Price1.Replace(" ", "")</span>
                                                        </td>
                                                        <td>
                                                            <span class="@(tierprice.IsPrice2StrikeOut ? "cross" : "")">@tierprice.Price2.Replace(" ", "")</span>
                                                        </td>
                                                        <td>
                                                            <span class="@(tierprice.IsPrice3StrikeOut ? "cross" : "")"> @tierprice.Price3.Replace(" ", "")</span>
                                                        </td>
                                                    }
                                                    else if (priceLevel == 4)
                                                    {
                                                        <td>
                                                            <span class="@(tierprice.IsPrice1StrikeOut ? "cross" : "")">@tierprice.Price1.Replace(" ", "")</span>
                                                        </td>
                                                        <td>
                                                            <span class="@(tierprice.IsPrice2StrikeOut ? "cross" : "")">@tierprice.Price2.Replace(" ", "")</span>
                                                        </td>
                                                        <td>
                                                            <span class="@(tierprice.IsPrice3StrikeOut ? "cross" : "")"> @tierprice.Price3.Replace(" ", "")</span>
                                                        </td>
                                                        <td>
                                                            <span class="@(tierprice.IsPrice4StrikeOut ? "cross" : "")">@tierprice.Price4.Replace(" ", "")</span>
                                                        </td>
                                                    }
                                                    <td>@(isPriceRow || tierprice.IsManufacturePrice ? priceLevel.ToString() : "")@tierprice.DiscountCode.Replace(" ", "").ToLower()</td>
                                                </tr>
                                            }
                                        }
                                    }

                                </tbody>
                            </table>
                            <br>
                            @if (Model.DData != null)
                            {
                                <p class="small-font">@Model.DData.PricingFooterNote</p>
                            }

                            <table class="table table-responsive">
                                <tbody>
                                    @if (Model.DData != null)
                                    {
                                        if (!string.IsNullOrEmpty(Model.DData.SetupPerColour))
                                        {

                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Setup Per Colour:</strong></td>
                                                <td>@Model.DData.SetupPerColour</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.RepeatSetup))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Repeat Setup Per Colour:</strong></td>
                                                <td>@Model.DData.RepeatSetup</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.DebossSetup))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Deboss & Die Setup:</strong></td>
                                                <td>@Model.DData.DebossSetup</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.RepeatDeboss))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Repeat Deboss:</strong></td>
                                                <td>@Model.DData.RepeatDeboss</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.DecalSetup))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Full Colour Setup :</strong></td>
                                                <td>@Model.DData.DecalSetup</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.RepeatDecal))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Repeat Full Colour Setup :</strong></td>
                                                <td>@Model.DData.RepeatDecal</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.LaserSetup))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Laser Engraving Setup:</strong></td>
                                                <td>@Model.DData.LaserSetup</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.RepeatLaser))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Repeat Laser Engraving Setup:</strong></td>
                                                <td>@Model.DData.RepeatLaser</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge1))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Additional Charge:</strong></td>
                                                <td>@Model.DData.AdditionalCharge1</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge2))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Additional Charge:</strong></td>
                                                <td>@Model.DData.AdditionalCharge2</td>
                                            </tr>
                                        }

                                        if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge3))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Additional Charge:</strong></td>
                                                <td>@Model.DData.AdditionalCharge3</td>
                                            </tr>
                                        }

                                        if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge4))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong> Additional Charge:</strong></td>
                                                <td>@Model.DData.AdditionalCharge4</td>
                                            </tr>
                                        }
                                    }

                                </tbody>
                            </table> <br>
                            @if (Model.DData != null)
                            {
                                <label>Note:</label>
                                <p class="small-font">
                                    @Model.DData.RepeatTerm
                                </p>
                                <p class="small-font">
                                    @Model.DData.FinalNote
                                </p>
                            }


                        </div>
                        <div role="tabpanel" class="tab-pane" id="features">
                            <br>
                            <div style="margin-left:15px">
                                <p>@Model.ShortDescription</p>
                                @if (@Model.DData != null)
                                {
                                    <p>
                                        <small>
                                            @Html.Raw(Model.DData.Features.Replace("\n", "<br />"))
                                        </small>
                                    </p>
                                }

                                <br>
                                <table class="table table-responsive">
                                    @if (Model.DData != null)
                                    {
                                        if (!string.IsNullOrEmpty(Model.DData.Materials))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong>Materials :</strong></td>
                                                <td>@Model.DData.Materials</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.Includes))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><strong>Includes :</strong></td>
                                                <td>@Model.DData.Includes</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.SpecailPackaging))
                                        {
                                            <tr>
                                                <td style="width:40%;"><strong>Special Packaging :</strong></td>
                                                <td>@Model.DData.SpecailPackaging</td>
                                            </tr>
                                        }
                                    }
                                </table>


                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane" id="spec">

                            <table class="table table-responsive">
                                <tbody>
                                    @if (Model.DData != null)
                                    {
                                        if (!string.IsNullOrEmpty(Model.DData.Capacity))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label>Capacity:</label></td>
                                                <td> @Model.DData.Capacity</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.Size))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label> Size: </label></td>
                                                <td> @Model.DData.Size</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.ImprintAreaInOutboard))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label> Imprint area in/outboard: </label></td>
                                                <td> @Model.DData.ImprintAreaInOutboard</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.ImprintAreaWrapAround))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label>Imprint area wraparound: </label></td>
                                                <td> @Model.DData.ImprintAreaWrapAround</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.DecoratingOption))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label> Decorating options: </label></td>
                                                <td> @Model.DData.DecoratingOption</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.PeicesPerCartoon))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label> Pieces per carton: </label></td>
                                                <td> @Model.DData.PeicesPerCartoon</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.WeightPerCartoon))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label>Weight per carton:</label></td>
                                                <td> @Model.DData.WeightPerCartoon</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.ProtectivePackaging))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width: 40%; "><label> Protective packaging:</label></td>
                                                <td> @Model.DData.ProtectivePackaging</td>
                                            </tr>
                                        }
                                        if (!string.IsNullOrEmpty(Model.DData.ReferToCataloguePage))
                                        {
                                            <tr style="border-bottom: 1px solid #ccc;">
                                                <td style="width:40%;"><label> Refer to catalogue page #:</label></td>
                                                <td> @Model.DData.ReferToCataloguePage</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    @Html.Partial("_ProductEmailAFriendButton", Model)

                    <div class="col-md-6 text-center">
                        <i class="fa fa-print fa-2x" onclick="window.open('@Url.Action("PrintProductDetails", new { id = Model.Id})','_blank')"></i>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@if (Model.DRelatedProducts != null)
{
    if (Model.DRelatedProducts.Any())
    {
        <div class="container rel-pro">
            <div class="row">
                <div class="main-header">
                    <p>You Might Also Like</p>
                </div>
            </div>
            <div class="row">
                <ul class="rel-products">
                    @if (Model.DRelatedProducts.Any())
                    {
                        var items = Model.DRelatedProducts.Take(3);
                        var iterations = 0;
                        while (items.Count() > 0)
                        {
                            foreach (var item in items)
                            {
                                <li class="border-r rel-pro-li">
                                    <div style="height:150px">
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.SEName })" title="@item.Name">
                                            <div style="width:100%;height:100%;background:url(@item.DefaultPicture.ImageUrl) center center no-repeat;"></div>
                                        </a>
                                    </div>
                                    <p class="btb">@item.SKU</p>

                                </li>
                            }
                            iterations++;
                            items = Model.DRelatedProducts.Skip(3 * iterations).Take(3);
                        }
                    }
                </ul>
            </div>
        </div>



    }

}

@*<div class="page product-details-page">
        <div class="page-body">
            @Html.Widget("productdetails_top", Model.Id)
            @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
            {
                <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                    <div class="product-essential">
                        @Html.Widget("productdetails_before_pictures", Model.Id)
                        <!--product pictures-->
                        @Html.Partial("_ProductDetailsPictures", Model)
                        @Html.Widget("productdetails_after_pictures", Model.Id)
                        <div class="overview">
                            @Html.Partial("_Discontinued", Model)
                            <div class="product-name">
                                <h1 itemprop="name">
                                    @Model.Name
                                </h1>
                            </div>
                            @if (!String.IsNullOrEmpty(Model.ShortDescription))
                            {
                                <div class="short-description">
                                    @Html.Raw(Model.ShortDescription)
                                </div>
                            }
                            @Html.Widget("productdetails_overview_top", Model.Id)
                            <!--product reviews-->
                            @Html.Partial("_ProductReviewOverview", Model.ProductReviewOverview)
                            <!--manufacturers-->
                            @Html.Partial("_ProductManufacturers", Model.ProductManufacturers)
                            <!--availability-->
                            @Html.Partial("_Availability", Model)
                            <!--SKU, MAN, GTIN, vendor-->
                            @Html.Partial("_SKU_Man_GTIN_Ven", Model)
                            <!--delivery-->
                            @Html.Partial("_DeliveryInfo", Model)
                            <!--sample download-->
                            @Html.Partial("_DownloadSample", Model)
                            <!--attributes-->
                            @{
                                var dataDictAttributes = new ViewDataDictionary();
                                dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                                @Html.Partial("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                            }
                            <!--gift card-->
                            @{
                                var dataDictGiftCard = new ViewDataDictionary();
                                dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.Id);
                                @Html.Partial("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                            }
                            <!--rental info-->
                            @{
                                var dataDictRental = new ViewDataDictionary();
                                dataDictRental.TemplateInfo.HtmlFieldPrefix = string.Format("rental_{0}", Model.Id);
                                @Html.Partial("_RentalInfo", Model, dataDictRental)
                            }
                            <!--price & add to cart-->
                            @{
                                @Html.Partial("_ProductTierPrices", Model.TierPrices)

                                var dataDictAddToCart = new ViewDataDictionary();
                                dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                                @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
                            }
                            <!--wishlist, compare, email a friend-->
                            <div class="overview-buttons">
                                @Html.Widget("productdetails_inside_overview_buttons_before", Model.Id)
                                @{
                                    var dataDictAddToWishlist = new ViewDataDictionary();
                                    dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                                    @Html.Partial("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                }
                                @Html.Partial("_CompareProductsButton", Model)
                                @Html.Partial("_ProductEmailAFriendButton", Model)
                                @Html.Widget("productdetails_inside_overview_buttons_after", Model.Id)
                            </div>
                            @Html.Partial("_ShareButton", Model)
                            @Html.Widget("productdetails_overview_bottom", Model.Id)
                        </div>
                        @if (!String.IsNullOrEmpty(Model.FullDescription))
                        {
                            <div class="full-description" itemprop="description">
                                @Html.Raw(Model.FullDescription)
                            </div>
                        }
                    </div>
                    @Html.Widget("productdetails_before_collateral", Model.Id)
                    <div class="product-collateral">
                        @Html.Partial("_ProductSpecifications", Model.ProductSpecifications)
                        @Html.Partial("_ProductTags", Model.ProductTags)
                    </div>
                    @Html.Action("ProductsAlsoPurchased", "Product", new { productId = Model.Id })
                    @Html.Action("RelatedProducts", "Product", new { productId = Model.Id })
                </div>
                                    }
            @Html.Widget("productdetails_bottom", Model.Id)
        </div>
    </div>*@
