@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>
    ();

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>
            ().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(storeName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>
            ().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<style>
    .product-strike-out {
        text-decoration: line-through;
        text-decoration-thickness: 3px;
        text-decoration-color: #C70039;
    }

    .quote-form {
        position: relative;
        border: solid 1px #d8dadb;
        width: 85%;
    }

    .quote-form-text {
        position: absolute;
        top: -10px;
        left: 10px;
        background-color: white;
        padding: 0 5px;
    }

    .quote-form-submit {
        background: #077b8d !important;
        min-width: 200px;
        float: right;
        display: inline-block;
    }
</style>
<div class="product-page-container" id="product-div-to-print">
    @Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)
    <section id="section-product-topper" class="section section-full-width">
        <div class="product-wrapper content-inner-width">
            <div class="column-split-inner">

                <div class="column-split-left50">
                    @Html.Partial("_ProductDetailsPictures", Model)

                    @if (Model.DFamilyProducts != null)
                    {
                        if (Model.DFamilyProducts.Count > 1)
                        {
                            var items = Model.DFamilyProducts.Take(4);
                            var iterations = 0;
                            <div class="product-related-wrapper">
                                <h2 class="product-info">Related Products</h2>
                                <div class="product-thumbnails-wrapper ">
                                    @while (items.Count() > 0)
                                    {
                                        foreach (var item in items)
                                        {
                                            <div class="product-thumbnail-wrapper">
                                                <a href="@Url.RouteUrl("Product", new { SeName=item.SEName })" title="@item.Name">
                                                    <img class="product-thumbnail" src="@item.DefaultPicture.ImageUrl" alt="@item.DefaultPicture.AlternateText" />
                                                </a>
                                            </div>
                                        }
                                        iterations++;
                                        items = Model.DFamilyProducts.Skip(4 * iterations).Take(4);
                                    }
                                </div>
                            </div>
                        }

                    }

                    @if (Model.DRelatedProducts != null)
                    {
                        if (Model.DRelatedProducts.Any())
                        {
                            var items = Model.DRelatedProducts.Take(4);
                            var iterations = 0;
                            <div class="product-related-wrapper">
                                <h2 class="product-info">Other Product Ideas</h2>
                                @while (items.Count() > 0)
                                {
                                    <div class="grid-row">
                                        @foreach (var item in items)
                                        {
                                            <div class="grid-product grid-4up">
                                                <a class="product-category-link" href="@Url.RouteUrl("Product", new { SeName=item.SEName })" title="@item.Name">
                                                    <div class="product-category-image-container ">
                                                        <img class="propduct-category-image corner-radius" src="@item.DefaultPicture.ImageUrl" alt="@item.DefaultPicture.AlternateText" />
                                                    </div>
                                                    <p class="product-category-image-label">@item.SKU</p>
                                                </a>
                                            </div>
                                        }
                                    </div>
                                    iterations++;
                                    items = Model.DRelatedProducts.Skip(4 * iterations).Take(4);
                                }
                            </div>
                        }
                    }
                </div>

                <div class="column-split-right50">
                    <div class="product-info-wrapper">
                        <h1 class="product-title">@Model.Name</h1>
                        <div class="product-number">@Model.Sku</div>
                        <div class"product-long-title">@Model.ShortDescription </div>
                        <div class="product-pricing-summary">
                            <ul class="product-summary-items">
                                <li class="product-summary-item">
                                    <div class="product-price-min"><span class="list-label"><i class="fas fa-tag"></i> From</span><span class="list-value">$8.48</span></div>
                                </li>
                                <li class="product-summary-item">
                                    <div class="product-qty-min"><span class="list-label"><i class="fas fa-th"></i> Minimum</span><span class="list-value">72pc</span></div>
                                </li>
                                <!--
                                <li class="product-summary-item">
                                    <div class="product-price-code"><span class="list-label"><i class="fas fa-star-of-life"></i> Code</span><span class="list-value">4c</span></div>
                                </li>
                                -->
                            </ul>
                        </div>
                        <div class="product-cta full-pad">
                            @{ Model.IsEmailButton = false;}
                            @Html.Partial("_ProductEmailAFriendButton", Model)

                            <!-- <a class="new-button cta-button-yellow home-hero-slide-cta more-products-cta corner-radius" href="#">Purchase now</a> -->
                            @{ Model.IsEmailButton = true;}
                            @Html.Partial("_ProductEmailAFriendButton", Model)
                            <a id="action-print" class="new-button cta-button-yellow action-cta corner-radius" onclick="window.open('@Url.Action(" PrintProductDetails", new { id=Model.Id})','_blank')"> <i class="fas fa-print"></i> Print</a>
                           



                        </div>
                        <div class="product-cta full-pad" style="padding-top:0px">
                            <a id="freight-estimate" class="new-button cta-button-yellow action-cta corner-radius"> <i class="fas fa-truck"></i> FREIGHT ESTIMATE</a>
                            <a  class="new-button cta-button-yellow action-cta corner-radius" style="visibility:hidden"> <i class="fas fa-truck"></i> FREIGHT ESTIMATE</a>
                            <a class="new-button cta-button-yellow action-cta corner-radius" style="visibility:hidden"> <i class="fas fa-truck"></i> FREIGHT ESTIMATE</a>
                        </div>
                        <img src="~/Content/DezineCorpImages/loader.gif" id="loader" style="width: 10%;display: none;" />
                        <div class="product-cta full-pad" id="quote-result-div" style="display: none;">



                        </div>
                        <div class="product-cta full-pad" id="quote-form-div" style="display: none;">


                            <div class="product-category-wrapper quote-form product-category-products content-inner-width">
                                <span class="quote-form-text">FREIGHT ESTIMATE : <b>@Model.Sku</b></span>
                                <div class="contact-form-wrapper" style="padding-bottom:0px">
                                    <form method="get" id="freight-estimate-form">
                                        <input id="ProductNumber" value="@Model.Sku" name="ProductNumber" type="hidden">
                                        <div class="form-group row">
                                            <label for="PostalCode" class="control-label  col-form-label col-sm-4">POSTAL CODE<sup>*</sup> : </label>
                                            <div class="col-sm-8">
                                                <input id="PostalCode" name="PostalCode" placeholder="Postal Code" value="A1A 1A1" type="text" required class="form-control" pattern="[A-Za-z]\d[A-Za-z] ?\d[A-Za-z]\d" title="Please enter a valid Canadian postal code">
                                            </div>
                                        </div>
                                        <br />

                                        <div class="form-group  row">
                                            <label for="State" class="control-label  col-form-label col-sm-4">PROVINCE<sup>*</sup> : </label>
                                            <div class="col-sm-8">
                                                <select name="State" class="form-control" id="State">
                                                    <option value="">Select Province</option>
                                                    <option value="AB" selected>Alberta</option>
                                                    <option value="BC">British Columbia</option>
                                                    <option value="MB">Manitoba</option>
                                                    <option value="NB">New Brunswick</option>
                                                    <option value="NL">Newfoundland and Labrador</option>
                                                    <option value="NS">Nova Scotia</option>
                                                    <option value="ON">Ontario</option>
                                                    <option value="PE">Prince Edward Island</option>
                                                    <option value="QC">Quebec</option>
                                                    <option value="SK">Saskatchewan</option>
                                                    <option value="NT">Northwest Territories</option>
                                                    <option value="NU">Nunavut</option>
                                                    <option value="YT">Yukon</option>
                                                </select>
                                            </div>

                                        </div>

                                        <br />
                                        <div class="form-group row">
                                            <label for="IsQuoteForResidential" class="control-label  col-form-label col-sm-4">RESIDENTIAL : </label>
                                            <div class="col-sm-8">
                                                <select name="IsQuoteForResidential" class="form-control" id="IsQuoteForResidential">
                                                    <option value="">Select</option>
                                                    <option value="Yes" selected>Yes</option>
                                                    <option value="No">No</option>
                                                </select>
                                            </div>

                                        </div>

                                        <br />

                                        <div class="form-group  row">
                                            <label for="Quantity" class="control-label  col-form-label col-sm-4">QUANTITY<sup>*</sup> : </label>
                                            <div class="col-sm-8">
                                                <input id="Quantity" name="Quantity" placeholder="Quantity" type="number" required class="form-control" value="250">
                                            </div>
                                        </div>
                                        <br />
                                        <div class="form-group  row">
                                            <div class="col-sm-8">&nbsp;</div>
                                            <button id="submit-freight-estimate" name="submit" type="submit" class="btn btn-primary  col-sm-4 quote-form-submit">SUBMIT</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <!-- /.product-cta -->
                        <div class="product-description full-pad">
                            <h2 class="product-info">Description & Features</h2>

                            @if (@Model.DData != null)
                            {
                                var features = Model.DData.Features.Split('\n');
                                <ul class="product-description-features">
                                    @foreach (var item in features)
                                    {
                                        <li class="product-description-feature">@item.Trim()</li>
                                    }
                                </ul>
                            }
                            @if (Model.DData != null)
                            {
                                <ul class="product-description-attributes">
                                    @if (!string.IsNullOrEmpty(Model.DData.Materials))
                                    {
                                        <li class="product-description-attribute no-bullet">
                                            <span class="list-label">Material</span>
                                            <span class="list-value">@Model.DData.Materials</span>
                                        </li>

                                    }
                                    @if (!string.IsNullOrEmpty(Model.DData.Includes))
                                    {
                                        <li class="product-description-attribute no-bullet">
                                            <span class="list-label">Includes</span>
                                            <span class="list-value">@Model.DData.Includes</span>
                                        </li>

                                    }
                                    @if (!string.IsNullOrEmpty(Model.DData.SpecailPackaging))
                                    {
                                        <li class="product-description-attribute no-bullet">
                                            <span class="list-label">Special Packaging</span>
                                            <span class="list-value">@Model.DData.SpecailPackaging</span>
                                        </li>

                                    }
                                </ul>
                            }


                        </div>

                        @if (Model.DBrandingProducts != null)
                        {
                            if (Model.DBrandingProducts.Any())
                            {

                                <div class="product-customization full-pad">
                                    <h2 class="product-info">Customization</h2>
                                    <ul class="product-customization-options">
                                        @foreach (var item in Model.DBrandingProducts)
                                        {
                                            if (item.BrandingType.Contains("screen"))
                                            {
                                                <li class="product-customization-option no-bullet"><a class="decoration-select @(Model.Sku.ToLower().Trim() == item.SKU.ToLower().Trim() ? " decoration-active" : "" )" href="@Url.RouteUrl("Product", new { SeName=item.SEName })" title="@item.Name"><i class="fas fa-paint-brush"></i> Screenprint</a></li>
                                            }

                                            else if (item.BrandingType.ToLower().Contains("laser"))
                                            {
                                                <li class="product-customization-option no-bullet"><a class="decoration-select @(Model.Sku.ToLower().Trim() == item.SKU.ToLower().Trim() ? " decoration-active" : "" )" href="@Url.RouteUrl("Product", new { SeName=item.SEName })" title="@item.Name"><i class="fas fa-bolt"></i> Laser etching</a></li>
                                            }
                                            else
                                            {
                                                <li class="product-customization-option no-bullet"><a class="decoration-select @(Model.Sku.ToLower().Trim() == item.SKU.ToLower().Trim() ? " decoration-active" : "" )" href="@Url.RouteUrl("Product", new { SeName=item.SEName })" title="@item.Name">@item.BrandingType</a></li>
                                            }
                                        }
                                    </ul>
                                </div>
                            }
                        }

                        @if (Model.DTierPrices != null)
                        {
                            <div class="product-pricing full-pad">
                                <h2 class="product-info">Pricing</h2>
                                <div id="price-screenprint" class="price-section price-section-active">
                                    <div class="product-price-grid">
                                        <table>
                                            @{var priceLevel = 0;}
                                            @foreach (var tierprice in Model.DTierPrices)
                                            {
                                                if (tierprice.PriceName.Equals("Quantity"))
                                                {
                                                    <thead>
                                                        <tr>
                                                            <td>@tierprice.PriceName</td>
                                                            @if (!string.IsNullOrEmpty(tierprice.Price1))
                                                            {
                                                                <td>@tierprice.Price1</td>
                                                                priceLevel++;
                                                            }
                                                            @if (!string.IsNullOrEmpty(tierprice.Price2))
                                                            {
                                                                <td>@tierprice.Price2</td>
                                                                priceLevel++;
                                                            }
                                                            @if (!string.IsNullOrEmpty(tierprice.Price3))
                                                            {
                                                                <td>@tierprice.Price3</td>
                                                                priceLevel++;
                                                            }
                                                            @if (!string.IsNullOrEmpty(tierprice.Price4))
                                                            {
                                                                <td>@tierprice.Price4</td>
                                                                priceLevel++;
                                                            }
                                                            <td>@tierprice.DiscountCode</td>
                                                        </tr>
                                                    </thead>
                                                }
                                                else
                                                {

                                                    var isPriceRow = tierprice.PriceName.Equals("Price", StringComparison.OrdinalIgnoreCase) || tierprice.PriceName.Equals("Sale Price", StringComparison.OrdinalIgnoreCase);
                                                    var tableRowClass = "";
                                                    if (tierprice.PriceName.Trim().ToLower().Equals("sale price", StringComparison.OrdinalIgnoreCase))
                                                    {
                                                        tableRowClass = "class=table-sale";
                                                    }
                                                    else if (tierprice.PriceName.Trim().ToLower().Equals("price", StringComparison.OrdinalIgnoreCase))
                                                    {
                                                        tableRowClass = "";
                                                    }
                                                    else if (tierprice.PriceName.Trim().ToLower().Equals("regular price", StringComparison.OrdinalIgnoreCase))
                                                    {
                                                        tableRowClass = "class=table-price";
                                                    }
                                                    <tr @tableRowClass style="border-bottom: 2px solid #5abab0 !important;">
                                                        <td class="row-head">@tierprice.PriceName</td>
                                                        @if (priceLevel == 1)
                                                        {
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price1.Replace(" ", "")</td>
                                                        }
                                                        else if (priceLevel == 2)
                                                        {
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price1.Replace(" ", "")</td>
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price2.Replace(" ", "")</td>
                                                        }
                                                        else if (priceLevel == 3)
                                                        {
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price1.Replace(" ", "")</td>
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price2.Replace(" ", "")</td>
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price3.Replace(" ", "")</td>
                                                        }
                                                        else if (priceLevel == 4)
                                                        {
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price1.Replace(" ", "")</td>
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price2.Replace(" ", "")</td>
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price3.Replace(" ", "")</td>
                                                            <td class="table-price @(tierprice.IsPrice1StrikeOut ? " product-strike-out" : "" )">@tierprice.Price4.Replace(" ", "")</td>
                                                        }
                                                        <td class="greyed-out">@(isPriceRow || tierprice.IsManufacturePrice ? priceLevel.ToString() : "")@tierprice.DiscountCode.Replace(" ", "").ToLower()</td>
                                                    </tr>
                                                }
                                            }
                                        </table>
                                    </div>
                                    @if (Model.DData != null)
                                    {
                                        <div class="product-fine-print">
                                            <p class="fine-print">@Model.DData.PricingFooterNote</p>
                                        </div>
                                    }
                                    <div class="product-price-details">
                                        <ul class="product-details-items">

                                            @if (Model.DData != null)
                                            {
                                                if (!string.IsNullOrEmpty(Model.DData.SetupPerColour))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Setup Per Colour</span>
                                                        <span class="list-value">@Model.DData.SetupPerColour</span>
                                                    </li>
                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.RepeatSetup))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Repeat Setup Per Colour</span>
                                                        <span class="list-value">@Model.DData.RepeatSetup</span>
                                                    </li>
                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.DebossSetup))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Deboss & Die Setup</span>
                                                        <span class="list-value">@Model.DData.DebossSetup</span>
                                                    </li>
                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.RepeatDeboss))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Repeat Deboss</span>
                                                        <span class="list-value">@Model.DData.RepeatDeboss</span>
                                                    </li>
                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.DecalSetup))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Full Colour Setup</span>
                                                        <span class="list-value">@Model.DData.DecalSetup</span>
                                                    </li>

                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.RepeatDecal))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Repeat Full Colour Setup</span>
                                                        <span class="list-value">@Model.DData.RepeatDecal</span>
                                                    </li>

                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.LaserSetup))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Laser Engraving Setup</span>
                                                        <span class="list-value">@Model.DData.LaserSetup</span>
                                                    </li>

                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.RepeatLaser))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Repeat Laser Engraving Setup</span>
                                                        <span class="list-value">@Model.DData.RepeatLaser</span>
                                                    </li>

                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge1))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Additional Charge</span>
                                                        <span class="list-value">@Model.DData.AdditionalCharge1</span>
                                                    </li>

                                                }
                                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge2))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Additional Charge</span>
                                                        <span class="list-value">@Model.DData.AdditionalCharge2</span>
                                                    </li>

                                                }

                                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge3))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Additional Charge</span>
                                                        <span class="list-value">@Model.DData.AdditionalCharge3</span>
                                                    </li>

                                                }

                                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge4))
                                                {
                                                    <li class="product-details-item no-bullet">
                                                        <span class="list-label">Additional Charge</span>
                                                        <span class="list-value">@Model.DData.AdditionalCharge4</span>
                                                    </li>

                                                }
                                            }
                                        </ul>
                                    </div>
                                    @if (Model.DData != null)
                                    {
                                        <div class="product-price-notes">
                                            <div class="product-notes-header">Note</div>
                                            <ul class="product-notes">

                                                <li class="product-note no-bullet">
                                                    <p class="fine-print"> @Model.DData.RepeatTerm</p>
                                                </li>
                                                <li class="product-note no-bullet">
                                                    <p class="fine-print">  @Html.Raw(Model.DData.FinalNote.Replace("Terms & Conditions", @"<a href='/Content/PDF/DezineCorp_Terms and Conditions_20220215.pdf' target='_blank'>Terms & Conditions</a>"))</p>
                                                </li>
                                            </ul>
                                        </div>
                                    }


                                </div>


                                <div class="product-specifications full-pad no-bottom">
                                    <h2 class="product-info">Specifications</h2>
                                    <ul class="product-specifications-items">
                                        @if (Model.DData != null)
                                        {
                                            if (!string.IsNullOrEmpty(Model.DData.Capacity))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Capacity</span><span class="list-value">@Model.DData.Capacity</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.Size))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Size</span><span class="list-value">@Model.DData.Size</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.ImprintAreaInOutboard))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Imprint area in/outboard</span><span class="list-value">@Model.DData.ImprintAreaInOutboard</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.ImprintAreaWrapAround))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Imprint area wraparound</span><span class="list-value">@Model.DData.ImprintAreaWrapAround</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.DecoratingOption))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Decorating Option</span><span class="list-value">@Model.DData.DecoratingOption</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.PeicesPerCartoon))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Pieces per carton</span><span class="list-value">@Model.DData.PeicesPerCartoon</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.WeightPerCartoon))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Weight per carton</span><span class="list-value">@Model.DData.WeightPerCartoon</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.ProtectivePackaging))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Protective packaging</span><span class="list-value">@Model.DData.ProtectivePackaging</span></li>

                                            }
                                            if (!string.IsNullOrEmpty(Model.DData.ReferToCataloguePage))
                                            {
                                                <li class="product-specifications-item no-bullet"><span class="list-label">Refer to catalogue page #</span><span class="list-value">@Model.DData.ReferToCataloguePage</span></li>

                                            }
                                        }


                                    </ul>
                                </div>
                            </div>
                        }


                        <!-- /.product-pricing -->
                    </div>
                    <!-- .product-info-wrapper -->
                </div>
                <!-- /.column-split-left -->
            </div>
            <!-- /.product-images-wrapper -->
        </div>
        <!-- /.product-wrapper -->
    </section>

    @if (Model.DFamilyProducts != null)
    {
        if (Model.DFamilyProducts.Count > 1)
        {
            var items = Model.DFamilyProducts.Take(4);
            var iterations = 0;
            <div class="product-related-wrapper-mobile">
                <h2 class="product-info">Related Products</h2>
                <div class="product-thumbnails-wrapper ">
                    @while (items.Count() > 0)
                    {
                        foreach (var item in items)
                        {
                            <div class="product-thumbnail-wrapper">
                                <a href="@Url.RouteUrl("Product", new { SeName=item.SEName })" title="@item.Name">
                                    <img class="product-thumbnail" src="@item.DefaultPicture.ImageUrl" alt="@item.DefaultPicture.AlternateText" />
                                </a>
                            </div>
                        }
                        iterations++;
                        items = Model.DFamilyProducts.Skip(4 * iterations).Take(4);
                    }
                </div>
            </div>
        }

    }


    @if (Model.DRelatedProducts != null)
    {
        if (Model.DRelatedProducts.Any())
        {
            var items = Model.DRelatedProducts.Take(4);
            var iterations = 0;
            <div class="product-related-wrapper-mobile">
                <h2 class="product-info">Other Product Ideas</h2>
                <div class="product-category-wrapper">
                    <div class="grid-wrapper">
                        @while (items.Count() > 0)
                        {
                            <div class="grid-row">
                                @foreach (var item in items)
                                {
                                    <div class="grid-product grid-4up">
                                        <a class="product-category-link" href="@Url.RouteUrl("Product", new { SeName=item.SEName })" title="@item.Name">
                                            <div class="product-category-image-container ">
                                                <img class="propduct-category-image corner-radius" src="@item.DefaultPicture.ImageUrl" alt="@item.DefaultPicture.AlternateText" />
                                            </div>
                                            <p class="product-category-image-label">@item.SKU</p>
                                        </a>
                                    </div>
                                }
                            </div>
                            iterations++;
                            items = Model.DRelatedProducts.Skip(4 * iterations).Take(4);
                        }
                    </div>
                </div>
            </div>
        }
    }



    @Html.Partial("_TalkToExpert")

    @Html.Partial("_SearchOption")

    @Html.Partial("_DezinecorpDifference")




</div>
<script>
    $(document).ready(function () {
        $('#loader').hide();
        $('#freight-estimate').on('click', function (e) {
            $('#quote-form-div').toggle();
            $('#quote-result-div').hide();
        });



        $("#freight-estimate-form").submit(function (event) {
            event.preventDefault(); // Prevent the form from submitting via the browser.

            var form = $(this);
           
            $.ajax({
                type: "GET",
                url: '/Common/Quote',
                data: form.serialize(),
                beforeSend: function () {
                    $('#loader').show(); // Show the loader
                    $('#quote-form-div').hide();
                    $('#quote-result-div').hide();
                },
                success: function (data) {
                    $('#quote-result-div').show();

                    $('#quote-result-div').html(data);
                },
                error: function (data) {
                    $('#quote-result-div').show();
                    $('#quote-result-div').html(data);
                },
                complete: function () {
                    $('#loader').hide(); // Hide the loader

                }
            });
        });

    });

</script>

