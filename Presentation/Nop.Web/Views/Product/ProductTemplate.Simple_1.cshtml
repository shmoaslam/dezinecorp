@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(storeName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }
}
<!--product breadcrumb-->
@section Breadcrumb
{
    @Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)
}
@Html.Widget("productdetails_after_breadcrumb", Model.Id)
<style>

    .comp {
        background: #fff;
        -moz-border-radius: 2px;
        -webkit-border-radius: 2px;
        -ms-border-radius: 12px;
        border-radius: 2px;
        padding: 20px;
        box-shadow: 0 0 4px #f0f0f0;
    }

    .carousel {
        margin-bottom: 0;
    }

    .table-nobordered {
        border: 0px;
        text-align: center;
        width: 50%;
        margin-bottom: 0px;
    }

        .table-nobordered img {
            /*width: 50%;*/
        }
		
		.sm-product{
			border-top: 2px solid #007A8A !important;
			border-left:  2px solid #007A8A;
			border-right:  2px solid #007A8A;
			border-bottom: 2px solid #007A8A !important;
			width: 100px
		}
		.sm-product-txt{
			border-top:  0px !important;
			border-left:  2px solid #007A8A;
			border-right:  2px solid #007A8A;
			border-bottom: 2px solid #007A8A !important;
			width: 100px
		}
</style>

<div class="container" id="product-desc">

    <div class="col-md-6 ">
        <div class="text-center comp">
            @Html.Partial("_ProductDetailsPictures", Model)
        </div>

        <div class="clearfix"></div>

    </div>
    <div class="col-md-6 compDescription pull-right">
        <div class="text-center"><h1>@Model.Name</h1></div>
        <hr />
        <h3>@Model.Sku</h3>
        <p>@Model.ShortDescription</p>
        @if (Model.DBrandingProducts != null)
        {
            if (Model.DBrandingProducts.Any())
            {
			
			
                <div class="row">
                    <table class="table table-nobordered">
                        <tr>

                            @foreach (var item in Model.DBrandingProducts)
                            {
                                <td><a href="@Url.RouteUrl("Product", new { SeName = item.SEName })" title="@item.Name"><img src="@item.DefaultPicture.ImageUrl" class="card-img-top sm-product" alt="@item.Name" title="@item.Name" /></a></td>

                            }
                        </tr>
                        <tr>
                            @foreach (var item in Model.DBrandingProducts)
                            {
                                <td ><p style="color:#007A8A;">@item.BrandingType</p></td>
                            }
                        </tr>
                    </table>
                </div>
            
			}
        }

        @*@if (Model.BrandingData != null)
        {
            <div class="productBranding">
                @if (!string.IsNullOrEmpty(Model.BrandingData.BrandingA))
                {
                    <span>@Model.BrandingData.BrandingA</span>
                }
                @if (!string.IsNullOrEmpty(Model.BrandingData.BrandingB))
                {
                    <span>@Model.BrandingData.BrandingB</span>
                }
                @if (!string.IsNullOrEmpty(Model.BrandingData.BrandingC))
                {
                    <span>@Model.BrandingData.BrandingC</span>
                }
                @if (!string.IsNullOrEmpty(Model.BrandingData.BrandingD))
                {
                    <span>@Model.BrandingData.BrandingD</span>
                }
                @if (!string.IsNullOrEmpty(Model.BrandingData.BrandingE))
                {
                    <span>@Model.BrandingData.BrandingE</span>
                }
                @if (!string.IsNullOrEmpty(Model.BrandingData.BrandingF))
                {
                    <span>@Model.BrandingData.BrandingF</span>
                }
            </div>
        }*@
        <div class="card pd-top-1o5per">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a style="color:#007A8A;" href="#price" aria-controls="messages" role="tab" data-toggle="tab">Pricing</a></li>
                <li role="presentation"><a style="color:#007A8A;" href="#features" aria-controls="home" role="tab" data-toggle="tab">Features</a></li>
                <li role="presentation"><a style="color:#007A8A;" href="#spec" aria-controls="profile" role="tab" data-toggle="tab">Specifications</a></li>
                @*<li role="presentation"><a href="#settings" aria-controls="settings" role="tab" data-toggle="tab">Setup</a></li>*@
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="price">
                    <br />
                    <table class="table table-responsive">
                        <tbody>
                            @{var priceLevel = 0;}
                            @if (Model.DTierPrices != null)
                            {
                                foreach (var tierprice in Model.DTierPrices)
                                {
                                    if (tierprice.PriceName.Equals("Quantity"))
                                    {
                                        <tr style="color: white;background-color: #007A8A;font-weight:bold;">
                                            <th scope="col">@tierprice.PriceName</th>
                                            @if (!string.IsNullOrEmpty(tierprice.Price1))
                                            {
                                                <th scope="col">@tierprice.Price1</th>
                                                priceLevel++;
                                            }
                                            @if (!string.IsNullOrEmpty(tierprice.Price2))
                                            {
                                                <th scope="col">@tierprice.Price2</th>
                                                priceLevel++;
                                            }
                                            @if (!string.IsNullOrEmpty(tierprice.Price3))
                                            {
                                                <th scope="col">@tierprice.Price3</th>
                                                priceLevel++;
                                            }
                                            @if (!string.IsNullOrEmpty(tierprice.Price4))
                                            {
                                                <th scope="col">@tierprice.Price4</th>
                                                priceLevel++;
                                            }
                                            <th scope="col">@tierprice.DiscountCode</th>
                                        </tr>
                                    }
                                    else
                                    {

                                        var isPriceRow = tierprice.PriceName.Equals("Price", StringComparison.OrdinalIgnoreCase);
                                        <tr style="color:Black;background-color:white;@(isPriceRow ? "border-bottom: 2px solid #007A8A;" : string.Empty)">
                                            <td>@tierprice.PriceName</td>
                                            @if (priceLevel == 1)
                                            {
                                                <td>@tierprice.Price1.Replace(" ", "")</td>
                                            }
                                            else if (priceLevel == 2)
                                            {
                                                <td>@tierprice.Price1.Replace(" ", "")</td>
                                                <td>@tierprice.Price2.Replace(" ", "")</td>
                                            }
                                            else if (priceLevel == 3)
                                            {
                                                <td>@tierprice.Price1.Replace(" ", "")</td>
                                                <td>@tierprice.Price2.Replace(" ", "")</td>
                                                <td>@tierprice.Price3.Replace(" ", "")</td>
                                            }
                                            else if (priceLevel == 4)
                                            {
                                                <td>@tierprice.Price1.Replace(" ", "")</td>
                                                <td>@tierprice.Price2.Replace(" ", "")</td>
                                                <td>@tierprice.Price3.Replace(" ", "")</td>
                                                <td>@tierprice.Price4.Replace(" ", "")</td>
                                            }
                                            <td>@(isPriceRow ? priceLevel.ToString() : "")@tierprice.DiscountCode.Replace(" ", "").ToLower()</td>
                                        </tr>
                                    }
                                }
                            }

                        </tbody>
                    </table>
                    @if (Model.DData != null)
                    {
                        <p>@Model.DData.PricingFooterNote</p>
                    }
                    <h3>Setup</h3>
                    <table class="table table-responsive">
                        <tbody>
                            @if (Model.DData != null)
                            {
                                if (!string.IsNullOrEmpty(Model.DData.SetupPerColour))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Setup Per Colour:</strong></td>
                                        <td>@Model.DData.SetupPerColour</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.RepeatSetup))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Repeat Setup Per Colour:</strong></td>
                                        <td>@Model.DData.RepeatSetup</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.DebossSetup))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Deboss & Die Setup:</strong></td>
                                        <td>@Model.DData.DebossSetup</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.RepeatDeboss))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Repeat Deboss:</strong></td>
                                        <td>@Model.DData.RepeatDeboss</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.DecalSetup))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Decal Setup Per Colour :</strong></td>
                                        <td>@Model.DData.DecalSetup</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.RepeatDecal))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Repeat Decal Setup Per Colour :</strong></td>
                                        <td>@Model.DData.RepeatDecal</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.LaserSetup))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Laser Engraving Setup:</strong></td>
                                        <td>@Model.DData.LaserSetup</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.RepeatLaser))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Repeat Laser Engraving Setup:</strong></td>
                                        <td>@Model.DData.RepeatLaser</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge1))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Additional Charge:</strong></td>
                                        <td>@Model.DData.AdditionalCharge1</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge2))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Additional Charge:</strong></td>
                                        <td>@Model.DData.AdditionalCharge2</td>
                                    </tr>
                                }

                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge3))
                                {
                                    <tr>
                                        <td style="width:40%;"><strong> Additional Charge:</strong></td>
                                        <td>@Model.DData.AdditionalCharge3</td>
                                    </tr>
                                }

                                if (!string.IsNullOrEmpty(Model.DData.AdditionalCharge4))
                                {
                                    <tr style="width:40%;">
                                        <td><strong> Additional Charge:</strong></td>
                                        <td>@Model.DData.AdditionalCharge4</td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                    @if (Model.DData != null)
                    {
                        <label>Note:</label>
                        <p>
                            @Model.DData.RepeatTerm
                        </p>
                        <p>
                            @Model.DData.FinalNote
                        </p>
                    }
                </div>
                <div role="tabpanel" class="tab-pane " id="features">
                    <br />
                    <div style="margin-left:15px">
                        <div>
                            @Model.ShortDescription
                        </div>
                        @if (@Model.DData != null)
                        {
                            <div>
                                @Html.Raw(Model.DData.Features.Replace("\n", "<br />"))
                            </div>
                        }
                        <br />
                        <div>
                            <table class="table table-responsive">
                                @if (Model.DData != null)
                                {
                                    if (!string.IsNullOrEmpty(Model.DData.Materials))
                                    {
                                        <tr>
                                            <td style="width:40%;"><strong>Materials :</strong></td>
                                            <td>@Model.DData.Materials</td>
                                        </tr>
                                    }
                                    if (!string.IsNullOrEmpty(Model.DData.Includes))
                                    {
                                        <tr>
                                            <td style="width:40%;"><strong>Includes :</strong></td>
                                            <td>@Model.DData.Includes</td>
                                        </tr>
                                    }
                                    if (!string.IsNullOrEmpty(Model.DData.SpecailPackaging))
                                    {
                                        <tr>
                                            <td style="width:40%;"><strong>Special Packaging :</strong></td>
                                            <td>@Model.DData.SpecailPackaging</td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane" id="spec">
                    <br />
                    <table class="table table-responsive">
                        <tbody>
                            @if (Model.DData != null)
                            {
                                if (!string.IsNullOrEmpty(Model.DData.Capacity))
                                {
                                    <tr>
                                        <td style="width:40%;"><label>Capacity:</label></td>
                                        <td> @Model.DData.Capacity</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.Size))
                                {
                                    <tr>
                                        <td style="width:40%;"><label> Size: </label></td>
                                        <td> @Model.DData.Size</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.ImprintAreaInOutboard))
                                {
                                    <tr>
                                        <td style="width:40%;"><label> Imprint area in/outboard: </label></td>
                                        <td> @Model.DData.ImprintAreaInOutboard</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.ImprintAreaWrapAround))
                                {
                                    <tr>
                                        <td style="width:40%;"><label>Imprint area wraparound: </label></td>
                                        <td> @Model.DData.ImprintAreaWrapAround</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.DecoratingOption))
                                {
                                    <tr>
                                        <td style="width:40%;"><label> Decorating options: </label></td>
                                        <td> @Model.DData.DecoratingOption</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.PeicesPerCartoon))
                                {
                                    <tr>
                                        <td style="width:40%;"><label> Pieces per carton: </label></td>
                                        <td> @Model.DData.PeicesPerCartoon</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.WeightPerCartoon))
                                {
                                    <tr>
                                        <td style="width:40%;"><label>Weight per carton:</label></td>
                                        <td> @Model.DData.WeightPerCartoon</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.ProtectivePackaging))
                                {
                                    <tr>
                                        <td style="width:40%;"><label> Protective packaging:</label></td>
                                        <td> @Model.DData.ProtectivePackaging</td>
                                    </tr>
                                }
                                if (!string.IsNullOrEmpty(Model.DData.ReferToCataloguePage))
                                {
                                    <tr>
                                        <td style="width:40%;"><label> Refer to catalogue page #:</label></td>
                                        <td> @Model.DData.ReferToCataloguePage</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="col-md-6"></div>
        <div class="col-md-3 text-center"> @Html.Partial("_ProductEmailAFriendButton", Model)</div>
        <div class="col-md-3 text-center"><div class="product-detail-function-button"><span class="fa fa-print email_a_friend" onclick="window.open('@Url.Action("PrintProductDetails", new { id = Model.Id})','_blank')"></span></div></div>
    </div>
</div>
@if (Model.DRelatedProducts != null)
{
    if (Model.DRelatedProducts.Any())
    {
        <hr style="width:100%" />
        <div class="container">
            <div class="row">
                <div class="row">
                    <div class="col-md-9">
                        <h2 style="margin-left:20px">Related Products</h2>
                    </div>
                    <div class="col-md-3">
                        <div class="controls pull-right hidden-xs">
                            <a class="left fa fa-chevron-left btn btn" href="#carousel-example"
                               data-slide="prev"></a>
                            <a class="right fa fa-chevron-right btn" href="#carousel-example" data-slide="next"></a>
                        </div>
                    </div>
                </div>
                <div id="carousel-example" class="carousel slide hidden-xs" data-ride="carousel">
                    <div class="carousel-inner">
                        @if (Model.DRelatedProducts.Any())
                        {
                            var items = Model.DRelatedProducts.Take(3);
                            var iterations = 0;
                            while (items.Count() > 0)
                            {
                                var active = iterations == 0 ? "active" : "";
                                <div class="item @active">
                                    <div class="row">
                                        @foreach (var item in items)
                                        {
                                            <div class="col-sm-3 rel-cat">
                                                <div class="col-item">
                                                    <div class="rel-products-heading">
                                                        <div class="row">
                                                            <div class="price col-md-12 text-center">
                                                                <h4>@item.Name</h4>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="rel-products-image" align="center">
                                                        <a href="@Url.RouteUrl("Product", new { SeName = item.SEName })" title="@item.Name">
                                                            <img src="@item.DefaultPicture.ImageUrl" class="img-responsive related-product" alt="a" />
                                                        </a>
                                                    </div>
                                                    <div class="rel-products-footer">
                                                        <div class="price col-md-12 text-center">
                                                            <h5 class="price-text-color">@item.SKU</h5>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                                iterations++;
                                items = Model.DRelatedProducts.Skip(3 * iterations).Take(3);
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }

}

@*<div class="page product-details-page">
        <div class="page-body">
            @Html.Widget("productdetails_top", Model.Id)
            @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
            {
                <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                    <div class="product-essential">
                        @Html.Widget("productdetails_before_pictures", Model.Id)
                        <!--product pictures-->
                        @Html.Partial("_ProductDetailsPictures", Model)
                        @Html.Widget("productdetails_after_pictures", Model.Id)
                        <div class="overview">
                            @Html.Partial("_Discontinued", Model)
                            <div class="product-name">
                                <h1 itemprop="name">
                                    @Model.Name
                                </h1>
                            </div>
                            @if (!String.IsNullOrEmpty(Model.ShortDescription))
                            {
                                <div class="short-description">
                                    @Html.Raw(Model.ShortDescription)
                                </div>
                            }
                            @Html.Widget("productdetails_overview_top", Model.Id)
                            <!--product reviews-->
                            @Html.Partial("_ProductReviewOverview", Model.ProductReviewOverview)
                            <!--manufacturers-->
                            @Html.Partial("_ProductManufacturers", Model.ProductManufacturers)
                            <!--availability-->
                            @Html.Partial("_Availability", Model)
                            <!--SKU, MAN, GTIN, vendor-->
                            @Html.Partial("_SKU_Man_GTIN_Ven", Model)
                            <!--delivery-->
                            @Html.Partial("_DeliveryInfo", Model)
                            <!--sample download-->
                            @Html.Partial("_DownloadSample", Model)
                            <!--attributes-->
                            @{
                                var dataDictAttributes = new ViewDataDictionary();
                                dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                                @Html.Partial("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                            }
                            <!--gift card-->
                            @{
                                var dataDictGiftCard = new ViewDataDictionary();
                                dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.Id);
                                @Html.Partial("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                            }
                            <!--rental info-->
                            @{
                                var dataDictRental = new ViewDataDictionary();
                                dataDictRental.TemplateInfo.HtmlFieldPrefix = string.Format("rental_{0}", Model.Id);
                                @Html.Partial("_RentalInfo", Model, dataDictRental)
                            }
                            <!--price & add to cart-->
                            @{
                                @Html.Partial("_ProductTierPrices", Model.TierPrices)

                                var dataDictAddToCart = new ViewDataDictionary();
                                dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                                @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
                            }
                            <!--wishlist, compare, email a friend-->
                            <div class="overview-buttons">
                                @Html.Widget("productdetails_inside_overview_buttons_before", Model.Id)
                                @{
                                    var dataDictAddToWishlist = new ViewDataDictionary();
                                    dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                                    @Html.Partial("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                }
                                @Html.Partial("_CompareProductsButton", Model)
                                @Html.Partial("_ProductEmailAFriendButton", Model)
                                @Html.Widget("productdetails_inside_overview_buttons_after", Model.Id)
                            </div>
                            @Html.Partial("_ShareButton", Model)
                            @Html.Widget("productdetails_overview_bottom", Model.Id)
                        </div>
                        @if (!String.IsNullOrEmpty(Model.FullDescription))
                        {
                            <div class="full-description" itemprop="description">
                                @Html.Raw(Model.FullDescription)
                            </div>
                        }
                    </div>
                    @Html.Widget("productdetails_before_collateral", Model.Id)
                    <div class="product-collateral">
                        @Html.Partial("_ProductSpecifications", Model.ProductSpecifications)
                        @Html.Partial("_ProductTags", Model.ProductTags)
                    </div>
                    @Html.Action("ProductsAlsoPurchased", "Product", new { productId = Model.Id })
                    @Html.Action("RelatedProducts", "Product", new { productId = Model.Id })
                </div>
                                    }
            @Html.Widget("productdetails_bottom", Model.Id)
        </div>
    </div>*@
