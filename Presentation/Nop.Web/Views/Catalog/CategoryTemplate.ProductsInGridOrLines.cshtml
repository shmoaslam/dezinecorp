@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@
@section Breadcrumb
{
    @if (Model.DisplayCategoryBreadcrumb)
    {
        <section>
            <div class="breadcrumb">
                <ul>
                    <li>
                        <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")"  style="margin:0px">@T("Categories.Breadcrumb.Top")</a>
                        <span class="delimiter"  style="margin-left:2px;margin-right:2px;">@breadcrumbDelimiter</span>
                    </li>
                    @foreach (var cat in Model.CategoryBreadcrumb)
                    {
                        var isLastCategory = cat.Id == Model.Id;
                    <li>
                        @if (isLastCategory)
                            {
                            <strong class="current-item" style="color:#337ab7;margin:0px">@cat.Name</strong>
                            }
                            else
                            {
                            <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" style="margin:0px" title="@cat.Name">@cat.Name</a>
                            <span class="delimiter"  style="margin-left:2px;margin-right:2px;">@breadcrumbDelimiter</span>
                            }
                    </li>
                    }
                </ul>
            </div>
        </section>
        @*<div class="breadcrumb">
                <ul>
                    <li>
                        <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                        <span class="delimiter">@breadcrumbDelimiter</span>
                    </li>
                    @foreach (var cat in Model.CategoryBreadcrumb)
                    {
                        var isLastCategory = cat.Id == Model.Id;
                        <li>
                            @if (isLastCategory)
                            {
                                <strong class="current-item">@cat.Name</strong>
                            }
                            else
                            {
                                <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                                <span class="delimiter">@breadcrumbDelimiter</span>
                            }
                        </li>
                    }
                </ul>
            </div>*@
        @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
    }
}

<h2>@Model.Name</h2><hr style="width:100%;">

@*<div class="col-md-3 cat-products">
        <h4>C0105WH-1BK</h4>
        <hr />
        <img src="img/thumb05.jpg" width="195px" alt="web design magazines">
        <div class="cat-footer">
            <p class="pull-left">As low as $6.98</p>
            <button class="details pull-right">Details</button>
        </div>
    </div>*@

@Html.Widget("categorydetails_top", Model.Id)
@*description*@
@*@if (!String.IsNullOrWhiteSpace(Model.Description))
    {
        <div class="category-description">
            @Html.Raw(Model.Description)
        </div>
    }*@
@Html.Widget("categorydetails_before_subcategories", Model.Id)
@*subcategories*@
@if (Model.SubCategories.Any())
{

    var items = Model.SubCategories.Take(3);
    var iterations = 0;
    <div class="row">
        @while (items.Count() > 0)
        {
            foreach (var item in items)
            {
        <div class="col-md-4 col-lg-4 col-sm-6 col-xs-12 sub-cat">
            <h4>@item.Name</h4>
            <hr />
            <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
            </a>
        </div>

            }
            iterations++;
            items = Model.SubCategories.Skip(3 * iterations).Take(3);
        }
    </div>
}


    @*featured products*@
    @*@Html.Widget("categorydetails_before_featured_products", Model.Id)

        @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                </div>
                <div class="item-grid">
                    @foreach (var item in Model.FeaturedProducts)
                    {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", item)
                        </div>
                    }
                </div>
            </div>
        }
        @Html.Widget("categorydetails_after_featured_products", Model.Id)*@
    @if (Model.Products.Count > 0)
    {
        <div class="row">
            @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
        </div>
    }
    @*@Html.Widget("categorydetails_before_filters", Model.Id)
        <div class="product-filters">

            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            }

            @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
            {
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
            }
        </div>
        @Html.Widget("categorydetails_before_product_list", Model.Id)*@
    <style>
        .item-is-new {
            background: #337ab7;
            padding: 2px;
            color: white;
            height: 20px;
        }

        .no-item-heading {
            height: 20px;
        }
    </style>

    @if (Model.Products.Any())
    {
        var items = Model.Products.Take(3);
        var iterations = 0;
        <div class="product-list">
            <div class="row">
                @while (items.Count() > 0)
                {
                    foreach (var product in items)
                    {
                        @Html.Partial("_ProductBox", product)
                    }
                    iterations++;
                    items = Model.Products.Skip(3 * iterations).Take(3);
                }
            </div>
            <div class="pager row" style="display :none">
                @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
            </div>
        </div>

        <script>
            $('.product-list').jscroll({
                loadingHtml: '<img src="/Content/DezineCorpImages/loader.gif"></img>',
                padding: 200,
                debug: true,
                autoTrigger: true,
                autoTriggerUntil: 10,
                nextSelector: 'li.next-page a',
                contentSelector: '.product-list',
                callback: function () { $('.pager').hide() }
            });
        </script>
    }
    @*@{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
        }*@
    @*@if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }*@
    @Html.Widget("categorydetails_bottom", Model.Id)

