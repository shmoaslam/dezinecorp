@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@*@{
        //prepare "Add to cart" AJAX link
        string addtocartlink = "";
        var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
        var quantity = 1;
        if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
        }
        else
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
        }

        var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
        var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
        var material = string.Empty;
        if (Model != null)
        {
            if (!string.IsNullOrEmpty(Model.Material))
            {
                material = (Model.Material.Length > 35 ? Model.Material.Substring(0, 35) + "..." : Model.Material);

            }
        }

    }*@
@{
    var material = string.Empty;
    if (Model != null)
    {
        if (!string.IsNullOrEmpty(Model.Material))
        {
            material = (Model.Material.Length > 35 ? Model.Material.Substring(0, 35) + "..." : Model.Material);

        }
    }
}

<div class="grid-product grid-4up product-box">
    @if (!string.IsNullOrEmpty(Model.ItemIsNew))
    {
        <div class="product-flag">
            @Model.ItemIsNew
        </div>
    }
    <a class="product-category-link" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
        <div class="product-category-image-container ">
            <img class="propduct-category-image corner-radius" src="@Model.DefaultPictureModel.ImageUrl" alt="@Model.DefaultPictureModel.AlternateText" />
        </div>
        <div class="product-info-wrapper">
            <h3 class="product-title">@(Model.Name)</h3>
            <div class="product-id">@Model.SKU</div>
            @if (!string.IsNullOrEmpty(material))
            {
                <div class="product-attribute" title="@Model.Material">@material</div>
            }
            <div class="product-pricing-summary">
                <ul class="product-grid-summary-items">
                    <li class="product-grid-summary-item">
                        @if (Model.ProductPrice != null)
                        {
                            if (!string.IsNullOrEmpty(Model.ProductPrice.PriceDesc))
                            {
                                if (Model.ProductPrice.PriceDesc.Contains("\r\n"))
                                {
                                    var data = Model.ProductPrice.PriceDesc.Split(new string[] { "\r\n" }, StringSplitOptions.None);
                                    if (!string.IsNullOrEmpty(data[1]))
                                    {
                                        <div class="product-price-min"><span class="product-price-preamble">@data[0]<br />@data[1]</span> <span class="product-price-amount">@Model.ProductPrice.Price</span></div>
                                    }
                                    else
                                    {
                                        <div class="product-price-min"><span class="product-price-preamble">@data[0]</span> <span class="product-price-amount">@Model.ProductPrice.Price</span></div>
                                    }
                                }
                                else
                                {
                                    <div class="product-price-min"><span class="product-price-preamble">@Model.ProductPrice.PriceDesc</span> <span class="product-price-amount">@Model.ProductPrice.Price</span></div>
                                }



                            }

                        }
                    </li>
                </ul>
            </div>
        </div>
    </a>
</div>
